import os
import csv
from datetime import datetime
from telegram import (
    Update, InputMediaPhoto, KeyboardButton,
    ReplyKeyboardMarkup, InputFile
)
from telegram.ext import (
    ApplicationBuilder, CommandHandler,
    MessageHandler, ContextTypes, filters
)
from dotenv import load_dotenv

# === –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env ===
load_dotenv()

TOKEN = os.getenv("BOT_TOKEN")
CHANNEL = os.getenv("CHANNEL_NAME")
TICKET_LINK = os.getenv("TICKET_LINK")
CSV_FILE = os.getenv("CSV_FILE")
IMAGES = [os.getenv("IMAGE_1"), os.getenv("IMAGE_2")]

# === –ö–æ–º–∞–Ω–¥–∞ /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id

    # 1. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await context.bot.send_message(chat_id=chat_id, text=(
        "üõ∞ –ü—Ä–∏–≤–µ—Ç, —Ç—ã –≤ —Å–∏—Å—Ç–µ–º–µ.\n\n"
        "üõ† –≠—Ç–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ momentum COLLAPSE ‚Äî —Å–ª–µ–¥—É—é—â–∏–π —Ä–µ–π–≤ –Ω–∞—à–µ–≥–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è.\n\n"
        "üå´ –ú–æ—Å–∫–≤–∞, 4 –∏—é–ª—è, –∫–ª—É–± \"–ù–µ–≤—Ä–æ—Ç–∏–∫\", 21:00 - 05:30, 18+"
    ))

    # 2. –ê—Ñ–∏—à–∏
    media = [
        InputMediaPhoto(open(IMAGES[0], "rb"), caption=(
            "üîª 21:00-22:00 ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≤—Ö–æ–¥ –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\n"
            "üî∫ 22:00-05:30 ‚Äî –≤—Ö–æ–¥ –ø–æ –±–∏–ª–µ—Ç–∞–º"
        )),
        InputMediaPhoto(open(IMAGES[1], "rb")),
    ]
    await context.bot.send_media_group(chat_id=chat_id, media=media)

    # 3. –£—Å–ª–æ–≤–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    await context.bot.send_message(chat_id=chat_id, text=(
        "–ü–µ—Ä–≤—ã–π —á–∞—Å ‚Äî –¥–ª—è —Å–≤–æ–∏—Ö. –ü—Ä–æ—Å—Ç–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è, —ç—Ç–æ –∑–∞–π–º—ë—Ç –º–µ–Ω—å—à–µ –º–∏–Ω—É—Ç—ã.\n\n"
        "üì° –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä—è–º–æ –∑–¥–µ—Å—å.\n"
        "üöß –£—Å–ª–æ–≤–∏–µ ‚Äî –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª (–±–æ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç —Å–∞–º).\n\n"
        f"–ê –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –≤–æ—Ä–≤–∞—Ç—å—Å—è –ø–æ–∑–∂–µ ‚Äî –≤–æ—Ç –±–∏–ª–µ—Ç—ã: {TICKET_LINK}"
    ))

    # 4. –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É" –≤–Ω–∏–∑—É
    keyboard = ReplyKeyboardMarkup(
        [[KeyboardButton("üî¥ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É")]],
        resize_keyboard=True
    )
    await context.bot.send_message(
        chat_id=chat_id,
        text="üëá –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é:",
        reply_markup=keyboard
    )


# # === –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ===
# async def check_subscription(update: Update, context: ContextTypes.DEFAULT_TYPE):
#     user = update.effective_user
#     chat_id = update.effective_chat.id

#     try:
#         member = await context.bot.get_chat_member(CHANNEL, user.id)
#         if member.status in ["creator", "administrator", "member", "restricted"]:
#             username = user.username or f"{user.first_name}_{user.id}"
#             timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

#             file_exists = os.path.isfile(CSV_FILE)
#             with open(CSV_FILE, "a", newline="", encoding="utf-8") as f:
#                 writer = csv.writer(f)
#                 if not file_exists:
#                     writer.writerow(["username", "datetime"])
#                 writer.writerow([username, timestamp])

#             await context.bot.send_message(chat_id=chat_id, text=(
#                 "‚úÖ –ì–æ—Ç–æ–≤–æ. –¢—ã –≤ —Å–ø–∏—Å–∫–µ.\n\n"
#                 "–ñ–¥–µ–º —Ç–µ–±—è 4–≥–æ –∏—é–ª—è –Ω–∞ –Ω–∞—à–µ–º —Ä–µ–π–≤–µ!\n\n"
#                 "üìÖ 4 –∏—é–ª—è, 21:00 - 05:30\n"
#                 "üïò –í—Ö–æ–¥ –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å 21:00 –¥–æ 22:00\n"
#                 "üìç –ö–ª—É–± \"–ù–µ–≤—Ä–æ—Ç–∏–∫\"\n\n"
#                 "üöß –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –±—É–¥—å –ø–æ–¥–ø–∏—Å–∞–Ω(–∞) –Ω–∞ –∫–∞–Ω–∞–ª ‚Äî —ç—Ç–æ –ø—Ä–æ–≤–µ—Ä—è—Ç –Ω–∞ –≤—Ö–æ–¥–µ.\n"
#                 "üì° –ü—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∂–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –≤—Ö–æ–¥–µ ‚Äî —Ç–µ–±—è –ø—É—Å—Ç—è—Ç\n"
#                 "ü™™ –ù–µ –∑–∞–±—É–¥—å –ø–∞—Å–ø–æ—Ä—Ç! –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ 18+\n\n"
#                 "–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å ‚Äî –Ω–µ –∑–∞–±—É–¥—å –≤–∑—è—Ç—å –±–∏–ª–µ—Ç: https://moscow.qtickets.events/169144-momentum-collapse"
#             ))
#             await context.bot.send_message(chat_id=chat_id, text=(
#                 "<b>–ï—Å–ª–∏ —Ç—ã –Ω–µ –æ–¥–∏–Ω ‚Äî –≤–µ–¥–∏ –∑–∞ —Å–æ–±–æ–π.</b>\n\n"
#                 "–°—Å—ã–ª–∫–∞ –Ω–∞ –º–µ–Ω—è: t.me/mmntum_bot\n\n"
#                 "–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å–∫–∏–Ω—å —Å—Ç–∏–∫–µ—Ä ‚Äî –ø—É—Å—Ç—å —Ç–æ–∂–µ –ø—Ä–æ–π–¥—É—Ç —ç—Ç–æ—Ç –∫–≤–µ—Å—Ç."
#             ), parse_mode="HTML")

#             # 3. –°—Ç–∏–∫–µ—Ä
#             await context.bot.send_sticker(chat_id=chat_id, sticker="CAACAgIAAxkBAAM_aDmdOtZULUqzoAfZfUSovfgmFFcAAo5pAAK9aahJgo-IKrWMgQo2BA")
#         else:
#             raise Exception("Not subscribed")
#     except Exception:
#         await context.bot.send_message(chat_id=chat_id, text=(
#             "üöß –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª.\n\n"
#             f"üîó https://t.me/{CHANNEL[1:]}\n\n"
#             f"üéü –ò–ª–∏ –º–æ–∂–µ—à—å –≤–∑—è—Ç—å –±–∏–ª–µ—Ç: {TICKET_LINK}"
#         ))


# === –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ===
async def check_subscription(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    await context.bot.send_message(
        chat_id=chat_id,
        text=(
            "–ü—Ä–∏–≤–µ—Ç, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–∫—Ä—ã–ª–∞—Å—å —Å–µ–≥–æ–¥–Ω—è –≤ 19:00 :/\n\n"
            "–ù–æ —Ç—ã –≤—Å–µ –µ—â–µ –º–æ–∂–µ—à—å –∫—É–ø–∏—Ç—å –±–∏–ª–µ—Ç - https://moscow.qtickets.events/169144-momentum-collapse\n\n"
            "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –≤ 21:00 –∏ –ø—Ä–æ–¥–ª–∏—Ç—Å—è –¥–æ 05:30, –º—ã –∂–¥–µ–º —Ç–µ–±—è\n\n"
            "–ù–∞—à —Ç–≥ –∫–∞–Ω–∞–ª —Å–æ –≤—Å–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π - @mmntum"
        )
    )
    # === –ö–æ–º–∞–Ω–¥–∞ /export ‚Äî —Ç–æ–ª—å–∫–æ –¥–ª—è @x0_0Xd ===
async def export_csv(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    if user.username == "x0_0Xd":
        if os.path.exists(CSV_FILE):
            await context.bot.send_document(
                chat_id=update.effective_chat.id,
                document=InputFile(CSV_FILE),
                filename=CSV_FILE,
                caption="üìÑ –í–æ—Ç —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö"
            )
        else:
            await context.bot.send_message(
                chat_id=update.effective_chat.id,
                text="‚ö†Ô∏è –§–∞–π–ª –µ—â—ë –Ω–µ —Å–æ–∑–¥–∞–Ω. –ù–∏–∫—Ç–æ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è."
            )
    else:
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text="üö´ –£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ."
        )



# === –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ===
def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & filters.Regex("^üî¥ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É$"), check_subscription))
    app.add_handler(CommandHandler("export", export_csv))


    app.run_polling()

if __name__ == "__main__":
    main()
